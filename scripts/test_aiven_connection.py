#!/usr/bin/env python3
"""
Script para probar la conexi√≥n a la base de datos de Aiven desde localhost
"""

import os
import sys
import mysql.connector
from mysql.connector import pooling as mysql_pooling
from dotenv import load_dotenv

# Agregar el directorio backend al path
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'backend'))

# Cargar variables de entorno
load_dotenv(os.path.join(os.path.dirname(__file__), '..', 'backend', 'env.local'))

def test_connection_without_ssl():
    """Probar conexi√≥n sin SSL"""
    print("üîç Probando conexi√≥n SIN SSL...")
    
    try:
        conn = mysql.connector.connect(
            host=os.getenv('MYSQL_HOST'),
            user=os.getenv('MYSQL_USER'),
            password=os.getenv('MYSQL_PASSWORD'),
            database=os.getenv('MYSQL_DATABASE'),
            port=int(os.getenv('MYSQL_PORT')),
            connection_timeout=10
        )
        
        cursor = conn.cursor()
        cursor.execute("SELECT COUNT(*) FROM usuarios")
        count = cursor.fetchone()[0]
        print(f"‚úÖ Conexi√≥n exitosa SIN SSL - {count} usuarios encontrados")
        
        cursor.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Error SIN SSL: {e}")
        return False

def test_connection_with_ssl():
    """Probar conexi√≥n con SSL"""
    print("\nüîç Probando conexi√≥n CON SSL...")
    
    try:
        conn = mysql.connector.connect(
            host=os.getenv('MYSQL_HOST'),
            user=os.getenv('MYSQL_USER'),
            password=os.getenv('MYSQL_PASSWORD'),
            database=os.getenv('MYSQL_DATABASE'),
            port=int(os.getenv('MYSQL_PORT')),
            ssl_disabled=False,
            ssl_verify_cert=False,
            ssl_verify_identity=False,
            connection_timeout=10
        )
        
        cursor = conn.cursor()
        cursor.execute("SELECT COUNT(*) FROM usuarios")
        count = cursor.fetchone()[0]
        print(f"‚úÖ Conexi√≥n exitosa CON SSL - {count} usuarios encontrados")
        
        cursor.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Error CON SSL: {e}")
        return False

def test_user_login():
    """Probar login de usuario"""
    print("\nüîç Probando login de usuario...")
    
    try:
        conn = mysql.connector.connect(
            host=os.getenv('MYSQL_HOST'),
            user=os.getenv('MYSQL_USER'),
            password=os.getenv('MYSQL_PASSWORD'),
            database=os.getenv('MYSQL_DATABASE'),
            port=int(os.getenv('MYSQL_PORT')),
            ssl_disabled=False,
            ssl_verify_cert=False,
            ssl_verify_identity=False,
            connection_timeout=10
        )
        
        cursor = conn.cursor(dictionary=True)
        
        # Buscar un usuario de prueba
        cursor.execute("SELECT id, correo, contrasena FROM usuarios LIMIT 1")
        usuario = cursor.fetchone()
        
        if usuario:
            print(f"‚úÖ Usuario encontrado: {usuario['correo']}")
            print(f"üìù Contrase√±a hash: {usuario['contrasena'][:20]}...")
        else:
            print("‚ùå No se encontraron usuarios")
            
        cursor.close()
        conn.close()
        return usuario is not None
        
    except Exception as e:
        print(f"‚ùå Error en login: {e}")
        return False

def main():
    print("=" * 60)
    print("üß™ PRUEBA DE CONEXI√ìN AIVEN DESDE LOCALHOST")
    print("=" * 60)
    
    # Mostrar configuraci√≥n
    print(f"\nüìã Configuraci√≥n:")
    print(f"   Host: {os.getenv('MYSQL_HOST')}")
    print(f"   Usuario: {os.getenv('MYSQL_USER')}")
    print(f"   Base de datos: {os.getenv('MYSQL_DATABASE')}")
    print(f"   Puerto: {os.getenv('MYSQL_PORT')}")
    
    # Probar conexiones
    ssl_works = test_connection_with_ssl()
    no_ssl_works = test_connection_without_ssl()
    
    if ssl_works:
        test_user_login()
    
    print("\n" + "=" * 60)
    print("üìä RESUMEN:")
    print(f"   SSL requerido: {'‚úÖ S√ç' if ssl_works and not no_ssl_works else '‚ùå NO'}")
    print(f"   Conexi√≥n funciona: {'‚úÖ S√ç' if ssl_works or no_ssl_works else '‚ùå NO'}")
    print("=" * 60)

if __name__ == "__main__":
    main()
